# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type API {
  id: ID!
  name: String!
  deploys: [Deploy!]!
  definition: APIDefinition!
}

enum Environment {
  SANDBOX
  STAGING
  PRODUCTION
}

type Deploy {
  id: ID!
  apiID: ID!
  env: Environment!
}

type APIDefinition {
  name: String!
  fields: [FieldDefinition!]!
  operations: [OperationDefinition!]!
}

type OperationDefinition {
  type: OperationType!
  sort: [SortDefinition!]
  filter: [String!]
}

enum OperationType {
  CREATE
  UPDATE
  READ
  LIST
}

type SortDefinition {
  field: String!
  order: SortOrder!
}

enum SortOrder {
  ASC
  DESC
}

type FieldDefinition {
  name: String!
  type: Type!
  customType: String
  constraints: Constraint!
}

enum Type {
  FLOAT
  INT
  STRING
}

type Constraint {
  # type Int
  minInt: Int
  maxInt: Int
  # type Float
  minFloat: Float
  maxFloat: Float
  # type String
  regex: String
  minLength: Int
  maxLength: Int
}

type Query {
  # TODO(gracew): page this
  api(id: ID!): API
  apis: [API!]!
}

input DefineAPI {
  # TODO(gracew): in the future may want to send an already parsed representation?
  rawDefinition: String!
}

input DeployAPI {
  apiID: ID!
  env: Environment!
}

type Mutation {
  defineAPI(input: DefineAPI!): API!
  deployAPI(input: DeployAPI!): Deploy!
}
