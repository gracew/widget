type OperationDefinition {
  create: CreateDefinition!
  read: ReadDefinition!
  list: ListDefinition!
  update: UpdateDefinition!
  delete: DeleteDefinition!
}

type CreateDefinition {
  enabled: Boolean!
}

type ReadDefinition {
  enabled: Boolean!
}

type ListDefinition {
  enabled: Boolean!
  sort: [SortDefinition!]!
  filter: [String!]!
}

type UpdateDefinition {
  enabled: Boolean!
  actions: [ActionDefinition!]!
}

type ActionDefinition {
  name: String!
  fields: [String!]!
}

type DeleteDefinition {
  enabled: Boolean!
}

type SortDefinition {
  field: String!
  order: SortOrder!
}

enum SortOrder {
  ASC
  DESC
}

extend type API {
  operations: OperationDefinition
}

extend input UpdateAPIInput {
  operations: OperationDefinitionInput
}

input OperationDefinitionInput {
  create: CreateDefinitionInput!
  read: ReadDefinitionInput!
  list: ListDefinitionInput!
  update: UpdateDefinitionInput!
  delete: DeleteDefinitionInput!
}

input CreateDefinitionInput {
  enabled: Boolean!
}

input ReadDefinitionInput {
  enabled: Boolean!
}

input ListDefinitionInput {
  enabled: Boolean!
  sort: [SortDefinitionInput!]!
  filter: [String!]!
}

input SortDefinitionInput {
  field: String!
  order: SortOrder!
}

input UpdateDefinitionInput {
  enabled: Boolean!
  actions: [ActionDefinitionInput!]!
}

input ActionDefinitionInput {
  name: String!
  fields: [String!]!
}

input DeleteDefinitionInput {
  enabled: Boolean!
}
