type Auth {
  apiID: ID!
  readPolicy: AuthPolicy!
  writePolicy: AuthPolicy!
  deletePolicy: AuthPolicy!
}

type AuthPolicy {
  type: AuthPolicyType!
  # type ATTRIBUTE_MATCH
  userAttribute: String
  objectAttribute: String
}

enum AuthPolicyType {
  CREATED_BY
  ATTRIBUTE_MATCH
  CUSTOM
}

extend type Query {
  auth(apiID: ID!): Auth
}

input AuthAPIInput {
  apiID: ID!
  readPolicy: AuthPolicyInput!
  writePolicy: AuthPolicyInput!
  deletePolicy: AuthPolicyInput!
}

input AuthPolicyInput {
  type: AuthPolicyType!
  # type ATTRIBUTE_MATCH
  userAttribute: String
  objectAttribute: String
}

extend type Mutation {
  authAPI(input: AuthAPIInput!): Boolean!
}
