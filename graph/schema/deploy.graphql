enum Environment {
  SANDBOX
  STAGING
  PRODUCTION
}

type Deploy {
  id: ID!
  apiID: ID!
  env: Environment!
}

extend type API {
  deploys: [Deploy!]!
}

enum DeployStep {
  GENERATE_CODE
  BUILD_IMAGE
  LAUNCH_CONTAINER
  LAUNCH_CUSTOM_LOGIC_CONTAINER
}

enum DeployStatus {
  IN_PROGRESS
  COMPLETE
  FAILED
}

type DeployStepStatus {
  deployID: ID!
  step: DeployStep!
  status: DeployStatus!
}

type DeployStatusResponse {
  steps: [DeployStepStatus!]!
}

extend type Query {
  deployStatus(deployID: ID!): DeployStatusResponse!
}

input DeployAPIInput {
  apiID: ID!
  # TODO(gracew): this should be provisioned by the server, but this is easier for now...
  deployID: ID!
  env: Environment!
}

extend type Mutation {
  deployAPI(input: DeployAPIInput!): Deploy!
  deleteDeploy(id: ID!): Boolean!
}
